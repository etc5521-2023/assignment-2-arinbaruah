---
title: "Q2"
author: "Arindom Baruah (32779267)"
format: html
execute: 
  warning: false
  message: false
---

```{r echo=FALSE}
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ggthemes)
library(ggExtra)
library(ggbeeswarm)
library(plotly)
```


## Exercise 2

The term "Barbenheimer" began on social media before the simultaneous theatrical release of two blockbuster films, Barbie and Oppenheimer, on July 21, 2023. This question asks you to explore data on movies released in 2023, not just these two. The data was compiled from https://datasets.imdbws.com and is available for you in the file "movies_2023.rda". (For each of the plots in d, e, f mark where Barbie and Oppenheimer fall, just for fun, and extra discussion points.)


:::{.callout-note}
# Question A
How many movies and variables are in the data?
:::

Answer A

```{r}
load("data/movies_2023.rda")
glimpse(movies_2023)
```
Based on the glimpse of the dataset, there are a total of __`r movies_2023 %>% nrow()` movies__ and __`r movies_2023 %>% ncol()` variables.__

b. Think about your expectations. Write these down before you make any computations or plots of the data.
- What genre keywords would you expect to be the most common? 

<div class="alert alert-block alert-warning">

I would generally expect the movie genre of __"Comedy"__ to be the most common as it tends to attract viewership from all age groups.

</div>
- What would you expect the relationship between number of votes and ratings to be? 

<div class="alert alert-block alert-warning">
I would expect movies with moderate to high ratings (7 or above) to obtain the most number of votes.
</div>
- What do you think the relationship between genre keyword and ratings might be? (What genre would have the top rating and which would have the lowest?)

<div class="alert alert-block alert-warning">
I would expect genres which are __suitable for all ages such as "Comedy","Action","Adventure" and "Musical" to be the ones with high number of votes__ while genres such as __"War","Horror","Fantasy","Crime","Documentary" which are suitable only for adult populations to be the ones with relatively lower number of votes__.
</div>

- Would you expect a relationship between run time and rating to be?

<div class="alert alert-block alert-warning">
I would expect movies with __run times of short to moderate__ to be the ones with relatively higher values of ratings.
</div>

:::{.callout-note}
# Question C
c. Make a bar chart of the genre key words (`adventure` to `western`), and summarise the distribution.
:::

Answer C
```{r}
#| label: fig-bar
#| fig-cap: "Number of movies in 2023 based on genre"
df_genre <- movies_2023 %>% select(10:30) %>% summarise_all(sum)

df_genre_long <- df_genre %>% pivot_longer(cols = c(1:ncol(df_genre)),names_to = "Genre",values_to = "Total_movies")

pl1 <- ggplot(data = df_genre_long,aes(x = reorder(Genre,
                                                   Total_movies),
                                       y =Total_movies)) + geom_col() + coord_flip() + 
  geom_label(aes(label = Total_movies),nudge_y = 60) + geom_col(data = ~filter(.x, Genre == "drama"),fill='darkred') + theme_classic() + labs(x = "Movie genre",y = "Total number of movies") + labs(caption = "Source: IMDB")
pl1
```
<div class="alert alert-block alert-warning">
@fig-bar illustrates the number of movies released for each genre in the year of 2023. The top 3 most common genres are drama, comedy and documentaries. This is expected as __such genres have a very wide viewership and hence, can cater to viewers of all ages__.

Genres such as war,western and reality were observed to be the least common as they have a __very specific audience and are not suitable for all age groups__.
</div>
:::{.callout-note}
# Question D
Plot the average rating by genre, in the best way that you can. Describe the distribution, and what you learn about ratings and genre.
:::
Answer D

```{r}
df_final <- data.frame()
for (i in 1:nrow(movies_2023)) {
  temp <- movies_2023[i,10:ncol(movies_2023)] * pull(movies_2023[i,"averageRating"])
  df_final <- rbind(df_final,temp)
  i=i+1
}


```


```{r}
df_genre_rating <- df_final %>% summarise_all(sum)

df_genre_long_rating <- df_genre_rating %>% pivot_longer(cols = c(1:ncol(df_genre_rating)),names_to = "Genre",values_to = "Total_Average_rating")
df_genre_long_rating <- left_join(df_genre_long_rating,df_genre_long,by="Genre")
df_genre_long_rating <- df_genre_long_rating %>% mutate("Average_rating" = Total_Average_rating/Total_movies) 
```


```{r}
#| label: fig-genre
#| fig-cap: "Average rating of each genre for movies released in 2023"
df_genre_long_rating$Average_rating <- round(df_genre_long_rating$Average_rating,1)

df_genre_sorted <- df_genre_long_rating %>% arrange(Average_rating)

ggdotchart(df_genre_sorted, y = "Average_rating", 
           x = "Genre",
           color = "Average_rating",                       
           add = "segments",
           add.params = list(color = "lightgray", size = 2),                             
           dot.size = 8,
           rotate=TRUE,
           label = "Average_rating",
           group = "Genre",                                
           font.label = list(color = "white", size = 8, 
                             vjust = 0, face = 'bold'),               
           ggtheme = theme_economist()                        
           ) + theme(legend.position = "none",panel.background = element_rect(fill = 'cornsilk'),axis.text = element_text(face = "bold")) +
  geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + labs(y = "Average rating of each genre", 
                                                                       x= "Movie Genre",
                                                                       caption = "Source: IMDB") + ggtitle("Average rating of each genre for \n movies released in 2023") 
```

<div class="alert alert-block alert-warning">
Based on @fig-genre, we can observe that:

1. On average, movies of musical genre received the highest rating of 7.5. However, it must also be noted that there were only 119 movies of this genre released in the year of 2023.
2. Movies of most common genres such as drama and comedy scored an average rating of 6.8 and 6.4 respectively.
3. Documentaries which were one of the top 3 most common genres score a relatively high average rating of 7.4. This shows that most viewers rate documentaries higher than other common genres such as comedy and drama.
4. Horror movies were observed to obtain the lowest average rating, indicating that the releases in 2023 have not been upto the mark.
</div>

:::{.callout-note}
# Question E
Plot ratings and number of votes, being careful as to which axis each should be plotted on. Summarise the distribution and what you learn.
:::
Answer E

```{r}
#| label: fig-votes
#| fig-cap: "Distribution of the number of votes for each value of average rating received"
options(scipen=1000)

titles <- c("Barbie","Oppenheimer")

df_barbenheimer <- movies_2023 %>% filter(primaryTitle %in% titles)

df_votes <- movies_2023 %>% group_by(averageRating) %>% summarise(Total_votes = sum(numVotes))
pl2 <- ggplot(data = df_votes,aes(x = averageRating,y = Total_votes/1000)) + geom_col(aes(fill=averageRating)) + 
  geom_vline(xintercept = df_barbenheimer$averageRating,linetype = 'dashed',color = c("pink","black")) + theme_classic() + scale_x_continuous(breaks = c(1:10)) + labs(x = "Average rating",y = "Total number of votes (in 1000s)",caption = "Source: IMDB") + theme(legend.position = 'none') +
    annotate(
    "segment",
    x = 9,
    y = 450,
    xend = 8.6  ,
    yend = 400,
    arrow = arrow(type = "closed",
                  length = unit(0.02, "npc"))
  ) +
  annotate(
    "text",
    x = 9.5,
    y = 460,
    colour = "black",
    label = 'Oppenheimer rating: 8.6',
    size = unit(2.5, "pt")
  ) +
    annotate(
    "segment",
    x = 7,
    y = 450,
    xend = 7.3  ,
    yend = 400,
    arrow = arrow(type = "closed",
                  length = unit(0.02, "npc"))
  ) +
  annotate(
    "text",
    x = 6.7,
    y = 460,
    colour = "#AA336A",
    label = 'Barbie rating: 7.4',
    size = unit(2.5, "pt")
  )



pl2
```
<div class="alert alert-block alert-warning">

Based on our analysis of @fig-votes, we can make the following observations:

1. There were __very few movies__ which were either rated __very low (less than 3) or very high (higher than 9)__.
2. The __rating of 6.1 was the most common rating in the dataset, followed by 7.4 and 8__.
3. Majority of the movies are rated between 5 and 8, which indicates that __most movies are likely to be moderately rated__.
4. The two viral movies, Barbie and Oppenheimer were visualised on this plot to understand how popular have these movies been in relation to the other releases in 2023.
5. The movie, __Oppenheimer has been highly rated with an average rating of 8.4 while the movie, Barbie was moderately rated with a rating of 7.6__.

</div>



:::{.callout-note}
# Question F
Make appropriate plots to explore the relationship of run time against ratings. 
:::

As we have a wide variation in the runtimes, we will categorise movies into either short, moderate or long movies. 

<div class="alert alert-block alert-warning">
The categorisation of the runtime which has been visualised in @fig-runtime will be done as follows:

1. Short movies: Movies with runtime of upto an hour (60 mins).
2. Moderate movies: Movies with runtime upto 2 hours (120 mins).
3. Long movies: Movies with runtime exceeding 2 hours (>120 mins).
</div>
```{r}
#| label: fig-runtime
#| fig-cap: "Runtime categorisation"
movies_2023$runtimeMinutes <- as.numeric(movies_2023$runtimeMinutes)
pl3 <-
  ggplot(data = movies_2023, aes(x = runtimeMinutes)) +  geom_density(fill = 'cornsilk') + 
  geom_vline(xintercept = c(60, 120), linetype = 'dashed') + theme_classic() +
  annotate(
    "text",
    x = 30,
    y = 0.025,
    colour = "darkgreen",
    label = 'Short',
    size = unit(4, "pt")
  ) +
  annotate(
    "text",
    x = 90,
    y = 0.025,
    colour = "black",
    label = 'Moderate',
    size = unit(4, "pt")
  ) +
  annotate(
    "text",
    x = 200,
    y = 0.025,
    colour = "darkred",
    label = 'Long',
    size = unit(4, "pt")
  ) + labs(x = "Runtime duration (in mins)",y = "Probility density")
  
pl3
```
```{r}
movies_2023 <- movies_2023 %>% mutate(runtimeCategory = case_when( runtimeMinutes<=60 ~ "Short",
                                                                   runtimeMinutes>60 & runtimeMinutes<=120 ~ "Moderate",
                                                                   runtimeMinutes>120 ~ "Long"
                                                 ))

```

```{r}
#| label: fig-runcat
#| fig-cap: "Average rating for each runtime category"
factor_level <- c("Short","Moderate","Long")
movies_2023$runtimeCategory <- factor(movies_2023$runtimeCategory,levels = factor_level)

df_barbenheimer <- movies_2023 %>% filter(primaryTitle %in% titles)
pl4 <- ggplot(data = movies_2023, aes(x = runtimeCategory,
                                      y = averageRating)) + 
  geom_violin(draw_quantiles = c(0.25, 0.5, 0.75), aes(fill = runtimeCategory),show.legend = FALSE) +
  geom_point(data = ~filter(.x, primaryTitle %in% titles),aes(x = runtimeCategory,y = averageRating,shape = primaryTitle),size=3) +
  scale_fill_brewer(palette = "Paired")  + theme_classic() + 
  labs(x = "Runtime duration category",y = "Average rating",shape = "Movie")
pl4
```
<div class="alert alert-block alert-warning">
Upon analysing @fig-runcat, we can make the following observations:

1. Movies from all three runtime categories have a very similar median average ratings with the median average rating of long movies slightly higher than short and moderately long movies.
2. For short movies, the proportion of movies with low average rating (less than 3) is higher than moderate and long movies. This can be observed through the thicker lower tail of the violin plot for short movies.
3. Based on the violin plot, we can observe that the average ratings of each runtime category of movies are __widely spread out__ and __there is no clear distinction in the average rating for each category of movies__. Based on this analysis, we can say that there is __no strong relationship between the runtime of the movie and its average rating__.
4. Additionally, we can observe that both __Barbie and Oppenheimer__ received average ratings __above the median average ratings__ for their respective runtime categories, indicating that they have been __popular movies for the year 2023__.
</div>
