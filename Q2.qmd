---
title: "Q2"
author: "Arindom Baruah (32779267)"
format: html
execute: 
  warning: false
  message: false
---

```{r echo=FALSE}
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ggthemes)
```


## Exercise 2

The term "Barbenheimer" began on social media before the simultaneous theatrical release of two blockbuster films, Barbie and Oppenheimer, on July 21, 2023. This question asks you to explore data on movies released in 2023, not just these two. The data was compiled from https://datasets.imdbws.com and is available for you in the file "movies_2023.rda". (For each of the plots in d, e, f mark where Barbie and Oppenheimer fall, just for fun, and extra discussion points.)


:::{.callout-note}
# Question A
How many movies and variables are in the data?
:::

Answer A

```{r}
load("data/movies_2023.rda")
glimpse(movies_2023)
```
Based on the glimpse of the dataset, there are a total of __`r movies_2023 %>% nrow()` movies__ and __`r movies_2023 %>% ncol()` variables.__

b. Think about your expectations. Write these down before you make any computations or plots of the data.
- What genre keywords would you expect to be the most common? 

<div class="alert alert-block alert-warning">

I would generally expect the movie genre of __"Comedy"__ to be the most common as it tends to attract viewership from all age groups.

</div>
- What would you expect the relationship between number of votes and ratings to be? 

<div class="alert alert-block alert-warning">
I would expect movies with moderate to high ratings (7 or above) to obtain the most number of votes.
</div>
- What do you think the relationship between genre keyword and ratings might be? (What genre would have the top rating and which would have the lowest?)

<div class="alert alert-block alert-warning">
I would expect genres which are __suitable for all ages such as "Comedy","Action","Adventure" and "Musical" to be the ones with high number of votes__ while genres such as __"War","Horror","Fantasy","Crime","Documentary" which are suitable only for adult populations to be the ones with relatively lower number of votes__.
</div>

- Would you expect a relationship between run time and rating to be?

<div class="alert alert-block alert-warning">
I would expect movies with __run times of short to moderate__ to be the ones with relatively higher values of ratings.
</div>

:::{.callout-note}
# Question C
c. Make a bar chart of the genre key words (`adventure` to `western`), and summarise the distribution.
:::

Answer C
```{r}
#| label: fig-bar
#| fig-cap: "Number of movies in 2023 based on genre"
df_genre <- movies_2023 %>% select(10:30) %>% summarise_all(sum)

df_genre_long <- df_genre %>% pivot_longer(cols = c(1:ncol(df_genre)),names_to = "Genre",values_to = "Total_movies")

pl1 <- ggplot(data = df_genre_long,aes(x = reorder(Genre,
                                                   Total_movies),
                                       y =Total_movies)) + geom_col() + coord_flip() + 
  geom_label(aes(label = Total_movies),nudge_y = 60) + geom_col(data = ~filter(.x, Genre == "drama"),fill='darkred') + theme_classic() + labs(x = "Movie genre",y = "Total number of movies")
pl1
```
<div class="alert alert-block alert-warning">
@fig-bar illustrates the number of movies released for each genre in the year of 2023. The top 3 most common genres are drama, comedy and documentaries. This is expected as __such genres have a very wide viewership and hence, can cater to viewers of all ages__.

Genres such as war,western and reality were observed to be the least common as they have a __very specific audience and are not suitable for all age groups__.
</div>
:::{.callout-note}
# Question D
Plot the average rating by genre, in the best way that you can. Describe the distribution, and what you learn about ratings and genre.
:::
Answer D

```{r}
df_final <- data.frame()
for (i in 1:nrow(movies_2023)) {
  temp <- movies_2023[i,10:ncol(movies_2023)] * pull(movies_2023[i,"averageRating"])
  df_final <- rbind(df_final,temp)
  i=i+1
}


```


```{r}
df_genre_rating <- df_final %>% summarise_all(sum)

df_genre_long_rating <- df_genre_rating %>% pivot_longer(cols = c(1:ncol(df_genre_rating)),names_to = "Genre",values_to = "Total_Average_rating")
df_genre_long_rating <- left_join(df_genre_long_rating,df_genre_long,by="Genre")
df_genre_long_rating <- df_genre_long_rating %>% mutate("Average_rating" = Total_Average_rating/Total_movies) 
```


```{r}
#| label: fig-broad
#| fig-cap: PhD graduates in each broad field
df_genre_long_rating$Average_rating <- round(df_genre_long_rating$Average_rating,1)

ggdotchart(df_genre_long_rating, y = "Average_rating", 
           x = "Genre",
           color = "Genre",                       
           add = "segments",
           add.params = list(color = "lightgray", size = 2),                             
           dot.size = 8,
           rotate=TRUE,
           label = "Average_rating",
           group = "Genre",                                
           font.label = list(color = "black", size = 7, 
                             vjust = 0, face = 'bold'),               
           ggtheme = theme_economist()                        
           ) + theme(legend.position = "none",panel.background = element_rect(fill = 'cornsilk'),axis.text = element_text(face = "bold")) +
  geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + labs(y = "Average rating of each genre", 
                                                                       x= "Movie genre",
                                                                       caption = "Source: IMDB") + ggtitle("Average rating of each genre for movies in 2023") 
```


e. Plot ratings and number of votes, being careful as to which axis each should be plotted on. Summarise the distribution and what you learn.
f. Make appropriate plots to explore the relationship of run time against ratings. 
